!!>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
!! NEMO/OCE :   Configuration namelist_cfg                               !!
!!>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
!! NEMO/OCE  :  1 - Domain & run manager (namrun, namcfg, namdom, namtsd, namcrs, namc1d, namc1d_uvd)
!! namelists    2 - Surface boundary (namsbc, namsbc_flx, namsbc_blk, namsbc_cpl,
!!                                    namsbc_sas, namtra_qsr, namsbc_rnf,
!!                                    namisf, namsbc_apr, 
!!                                    namsbc_ssr, namsbc_wave, namberg)
!!              3 - lateral boundary (namlbc, namagrif, nambdy, nambdy_tide)
!!              4 - top/bot boundary (namdrg, namdrg_top, namdrg_bot, nambbc, nambbl)
!!              5 - Tracer           (nameos, namtra_adv, namtra_ldf, namtra_eiv, namtra_dmp)
!!              6 - dynamics         (namdyn_adv, namdyn_vor, namdyn_hpg, namdyn_spg, namdyn_ldf)
!!              7 - Vertical physics (namzdf, namzdf_ric, namzdf_tke, namzdf_gls, namzdf_iwm)
!!              8 - diagnostics      (namnc4, namtrd, namspr, namflo, namhsb)
!!              9 - Obs & Assim      (namobs, nam_asminc)
!!             10 - miscellaneous    (nammpp, namctl, namsto)
!!>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

!!======================================================================
!!              ***  Domain & Run management namelists  ***           !!
!!                                                                    !!
!!   namrun       parameters of the run
!!   namdom       space and time domain
!!   namcfg       parameters of the configuration                       (default: user defined GYRE)
!!   namwad       Wetting and drying                                    (default: OFF)
!!   namtsd       data: temperature & salinity                          (default: OFF)
!!   namcrs       coarsened grid (for outputs and/or TOP)               (ln_crs =T)
!!   namc1d       1D configuration options                              (ln_c1d =T)
!!   namc1d_dyndmp 1D newtonian damping applied on currents             (ln_c1d =T)
!!   namc1d_uvd   1D data (currents)                                    (ln_c1d =T)
!!======================================================================
!
!-----------------------------------------------------------------------
&namrun        !   parameters of the run
!-----------------------------------------------------------------------
   nn_no       =       0   !  Assimilation cycle index
   cn_exp      =  "XXX_EXP_XXX"  !  experience name
   nn_it000    =    XXX_TST_XXX   !  first time step
   nn_itend    =    XXX_TEN_XXX   !  last  time step (std 5840)
   nn_date0    =  XXX_YEAR_XXX0101   !  date at nit_0000 (format yyyymmdd) used if ln_rstart=F or (ln_rstart=T and nn_rstctl=0 or 1)
   nn_time0    =       0000   !  initial time of day in hhmm
   nn_leapy    =       1   !  Leap year calendar (1) or not (0)
   ln_rstart   = XXX_RST_XXX,   !  start from rest (F) or from a restart file (T)
      ln_1st_euler = .false.,  !  =T force a start with forward time step (ln_rstart=T)
      nn_rstctl    = XXX_RCT_XXX   !  restart control ==> activated only if ln_rstart=T
      !                          !    = 0 nn_date0 read in namelist ; nn_it000 : read in namelist
      !                          !    = 1 nn_date0 read in namelist ; nn_it000 : check consistancy between namelist and restart
      !                          !    = 2 nn_date0 read in restart  ; nn_it000 : check consistancy between namelist and restart
      cn_ocerst_in    = "XXX_RS0_XXX"   !  suffix of ocean restart name (input)
      cn_ocerst_indir = "./RESTARTS"         !  directory from which to read input ocean restarts
      cn_ocerst_out   = "restart"   !  suffix of ocean restart name (output)
      cn_ocerst_outdir = "./RESTARTS"        !  directory in which to write output ocean restarts
      ln_rstdate=XXX_RSD_XXX,
      ln_reset_ts=XXX_RTS_XXX,
   nn_istate   =       0   !  output the initial state (1) or not (0)
   ln_rst_list = .false.,   !  output restarts at list of times using nn_stocklist (T) or at set frequency with nn_stock (F)
   nn_stock    =       0   !  used only if ln_rst_list = F: output restart freqeuncy (modulo referenced to 1)
      !                          !    =  0 force to write restart files only at the end of the run
      !                          !    = -1 do not do any restart
   ln_mskland  = .false.,   !  mask land points in NetCDF outputs
   ln_cfmeta   = .true.,   !  output additional data to netCDF files required for compliance with the CF metadata standard
/
!-----------------------------------------------------------------------
&namdom        !   time and space domain
!-----------------------------------------------------------------------
   ln_linssh   = .false.,   !  =T  linear free surface  ==>>  model level are fixed in time
   !
   rn_Dt       = XXX_RDT_XXX     !  time step for the dynamics and tracer
   rn_atfp     =    0.1    !  asselin time filter parameter
   !
   ln_crs      = .false.,   !  Logical switch for coarsening module      (T => fill namcrs)
   ln_c1d      = .false.,   !  Single column domain (1x1pt)              (T => fill namc1d)
   !
   ln_meshmask = .false.,   !  =T create a mesh file
/
!-----------------------------------------------------------------------
&namcfg        !   parameters of the configuration                      (default: use namusr_def in namelist_cfg)
!-----------------------------------------------------------------------
   ln_read_cfg = .true.,     !  (=T) read the domain configuration file
      !                      !  (=F) user defined configuration           (F => create/check namusr_def)
      cn_domcfg = "domain_cfg"  ! domain configuration filename
      !
      ln_closea    = .false., !  (=T => fill namclo) 
      !                      !  (=F) no control of net precip/evap over closed sea
      !
   ln_write_cfg = .false.,    !  (=T) create the domain configuration file
      cn_domcfg_out = "domain_cfg_out" ! newly created domain configuration filename
      !
   ln_use_jattr = .false.,    !  use (T) the file attribute: open_ocean_jstart, if present
   !                         !  in netcdf input files, as the start j-row for reading
/
!-----------------------------------------------------------------------
&namclo        !   parameters of the closed sea (cs) behavior                (default: OFF)
!-----------------------------------------------------------------------
   ln_maskcs = .false.,        ! (=T) cs are masked ; So, in this case ln_mask_csundef and ln_clo_rnf have no effect.
      !                       ! (=F => set ln_mask_csundef and ln_clo_rnf) 
      !                       ! cs masks are read and net evap/precip over closed sea spread out depending on domain_cfg.nc masks.
      !                       ! See ln_mask_csundef and ln_clo_rnf for specific option related to this case
      !
      ln_mask_csundef = .true.,   ! (=T) undefined closed seas are masked ; 
      !                          ! (=F) undefined closed seas are kept and no specific treatment is done for these closed seas
      !
      ln_clo_rnf = .true.,        ! (=T) river mouth specified in domain_cfg.nc masks (rnf and emp case) are added to the runoff mask.
      !                          !      allow the treatment of closed sea outflow grid-points to be the same as river mouth grid-points
/
!-----------------------------------------------------------------------
&namtsd        !    Temperature & Salinity Data  (init/dmp)             (default: OFF)
!-----------------------------------------------------------------------
   !                       ! =T  read T-S fields for:
   ln_tsd_init = .true.,         !  ocean initialisation
   ln_tsd_dmp  = .false.,         !  T-S restoring   (see namtra_dmp)
   ln_tsd_interp=.true.,

   cn_dir      = './INPUTS/'      !  root directory for the T-S data location
   !___________!_________________________!___________________!___________!_____________!________!___________!__________________!__________!_______________!
   !           !  file name              ! frequency (hours) ! variable  ! time interp.!  clim  ! 'yearly'/ ! weights filename ! rotation ! land/sea mask !
   !           !                         !  (if <0  months)  !   name    !   (logical) !  (T/F) ! 'monthly' !                  ! pairing  !    filename   !
   sn_sal='EN.4.1.1.f.analysis.g10.1995-2014.eORCA025.teos10.nc',-1,'salinity',.true.,.true.,'yearly','','','',
   sn_tem='EN.4.1.1.f.analysis.g10.1995-2014.eORCA025.teos10.nc',-1,'temperature',.true.,.true.,'yearly','','','',
   sn_dep  = 'EN4_depth.nc' ,     -12  ,'depth_4D',   .false.   , .true.  , 'yearly'   , '' ,    ''    ,      ''
   sn_msk  = 'EN4_depth.nc' ,     -12  ,'mask'     ,   .false.   , .true.  , 'yearly'   , '' ,    ''    ,      ''
/
======================================================================
!!            ***  Surface Boundary Condition namelists  ***          !!
!!                                                                    !!
!!   namsbc          surface boundary condition manager                 (default: NO selection)
!!   namsbc_flx      flux               formulation                     (ln_flx     =T)
!!   namsbc_blk      Bulk formulae formulation                          (ln_blk     =T)
!!   namsbc_cpl      CouPLed            formulation                     ("key_oasis3" )
!!   namsbc_sas      Stand-Alone Surface module                         (SAS_SRC  only)
!!   namsbc_iif      Ice-IF: use observed ice cover                     (nn_ice = 1   )
!!   namtra_qsr      penetrative solar radiation                        (ln_traqsr  =T)
!!   namsbc_ssr      sea surface restoring term (for T and/or S)        (ln_ssr     =T)
!!   namsbc_rnf      river runoffs                                      (ln_rnf     =T)
!!   namsbc_apr      Atmospheric Pressure                               (ln_apr_dyn =T)
!!   namsbc_wave     external fields from wave model                    (ln_wave    =T)
!!   namberg         iceberg floats                                     (ln_icebergs=T)
!!   namsbc_fwb      freshwater-budget adjustment                       (nn_fwb > 0)
!!======================================================================
!
!-----------------------------------------------------------------------
&namsbc        !   Surface Boundary Condition manager                   (default: NO selection)
!-----------------------------------------------------------------------
   nn_fsbc     = 1         !  frequency of SBC module call
      !                    !  (control sea-ice & iceberg model call)
                     ! Type of air-sea fluxes
   ln_blk      = .true.,   !  Bulk formulation                          (T => fill namsbc_blk )
                     ! Sea-ice :
   nn_ice      = 2         !  =0 no ice boundary condition
      !                    !  =1 use observed ice-cover                 (  => fill namsbc_iif )
      !                    !  =2 or 3 for SI3 and CICE, respectively
                     ! Misc. options of sbc :
   ln_traqsr   = .true.,   !  Light penetration in the ocean            (T => fill namtra_qsr)
   ln_dm2dc    = .false.,   !  daily mean to diurnal cycle on short wave
   ln_ssr      = .true.,   !  Sea Surface Restoring on T and/or S       (T => fill namsbc_ssr)
   nn_fwb      = 1         !  FreshWater Budget: =0 unchecked
      !                    !     =1 global mean of e-p-r set to zero at each time step
      !                    !     =2 annual global mean of e-p-r set to zero
   ln_rnf      = .true.,   !  runoffs                                   (T => fill namsbc_rnf)
   nn_lsm      = -3         !  =0 land/sea mask for input fields is not applied (keep empty land/sea mask filename field) ,
                           !  =1:n number of iterations of land/sea mask application for input fields (fill land/sea mask filename field)
/
!-----------------------------------------------------------------------
&namsbc_blk    !   namsbc_blk  generic Bulk formula          (ln_blk =T)
!-----------------------------------------------------------------------
   ln_NCAR      = .true.,     ! "NCAR"      algorithm   (Large and Yeager 2008)
      rn_zu        = 10.     !  Wind vector reference height (m)
      nn_iter_algo = 5       !  Number of iterations in bulk param. algo ("stable ABL + weak wind" requires more)
      ln_skin_cs   = .false., !  use the cool-skin parameterization  => use at least nn_iter_algo > 10
      ln_skin_wl   = .false., !  use the warm-layer parameterization => use at least nn_iter_algo > 10
   !
   rn_pfac    = 1.          !  multipl. factor for precipitation (total & snow)
   rn_efac    = 1.          !  multipl. factor for evaporation (0. or 1.)
   !
   ln_crt_fbk = .false.,     !  Add surface current feedback to the wind stress (Renault et al. 2020, doi: 10.1029/2019MS001715)
         rn_stau_a = -2.9e-3   !     Alpha from eq. 10: Stau = Alpha * Wnd + Beta
         rn_stau_b =  8.0e-3   !     Beta 
   !
   ln_humi_sph = .true.,  !  humidity "sn_humi" is specific humidity  [kg/kg]
   ln_humi_dpt = .false., !  humidity "sn_humi" is dew-point temperature [K]
   ln_humi_rlh = .false., !  humidity "sn_humi" is relative humidity     [%]
   ln_tair_pot = .false., !  air temperature read in "sn_tair" is already POTENTIAL TEMPERATURE, NOT ABSOLUTE (ECMWF => ln_tair_pot=.false.,)
   !!   
   !! Bulk transfer coefficients over sea-ice: (relevant IF: nn_ice >=1 )
   ln_Cx_ice_cst = .true.,     ! use constant ice-air bulk transfer coefficients (value given below)
      rn_Cd_i  = 1.4e-3       ! sea-ice drag coefficient
      rn_Ce_i  = 1.4e-3       !    "    sublimation coefficient
      rn_Ch_i  = 1.4e-3       !    "    sensible heat flux coefficient
   ln_Cx_ice_AN05  = .false.,  !  (Andreas et al. 2005)
   ln_Cx_ice_LU12  = .false.,  !  (Lupkes et al. 2012)
   ln_Cx_ice_LG15  = .false.,  !  (Lupkes & Gryanik 2015)
   !
   cn_dir      = './FORCING/JRA/'      !  root directory for the bulk data location
   !___________!_________________________!___________________!___________!_____________!________!___________!______________________________________!__________!_______________!
   !           !  file name              ! frequency (hours) ! variable  ! time interp.!  clim  ! 'yearly'/ !       weights filename               ! rotation ! land/sea mask !
   !           !                         !  (if <0  months)  !   name    !   (logical) !  (T/F) ! 'monthly' !                                      ! pairing  !    filename   !
   sn_wndi     = 'uas',                   3,                  'uas',      .true.,       .false., 'yearly',   'weights_grid_jra_bicubic_e025_nohaloes_full.nc',    'Ume',
   sn_wndj     = 'vas',                   3,                  'vas',      .true.,       .false., 'yearly',   'weights_grid_jra_bicubic_e025_nohaloes_full.nc',    'Vme',
   sn_qsr      = 'rsds',                  3,                  'rsds',     .false.,      .false., 'yearly',   'weights_grid_jra_bilin_e025_nohaloes_full.nc',      '',
   sn_qlw      = 'rlds',                  3,                  'rlds',     .false.,      .false., 'yearly',   'weights_grid_jra_bilin_e025_nohaloes_full.nc',      '',
   sn_tair     = 'tas',                   3,                  'tas',      .true.,       .false., 'yearly',   'weights_grid_jra_bilin_e025_nohaloes_full.nc',      '',
   sn_humi     = 'huss',                  3,                  'huss',     .true.,       .false., 'yearly',   'weights_grid_jra_bilin_e025_nohaloes_full.nc',      '',
   sn_prec     = 'ptot',                  3,                  'ptot',     .true.,       .false., 'yearly',   'weights_grid_jra_bilin_e025_nohaloes_full.nc',      '',
   sn_snow     = 'prsn',                  3,                  'prsn',     .true.,       .false., 'yearly',   'weights_grid_jra_bilin_e025_nohaloes_full.nc',      '',
   sn_slp      = 'psl',                   3,                  'psl',      .true.,       .false., 'yearly',   'weights_grid_jra_bilin_e025_nohaloes_full.nc',      '',
   sn_uoatm    = 'NOT USED'                   ,    6.        , 'UOATM'   ,   .false.   , .true. , 'yearly'  , 'weights_core_orca2_bilinear_noc.nc' , 'Uoceatm', ''
   sn_voatm    = 'NOT USED'                   ,    6.        , 'VOATM'   ,   .false.   , .true. , 'yearly'  , 'weights_core_orca2_bilinear_noc.nc' , 'Voceatm', ''
   sn_cc       = 'NOT USED'                   ,   24.        , 'CC'      ,   .false.   , .true. , 'yearly'  , 'weights_core_orca2_bilinear_noc.nc' , ''       , ''
   sn_hpgi     = 'NOT USED'                   ,   24.        , 'uhpg'    ,   .false.   , .false., 'monthly' , 'weights_ERAI3D_F128_2_ORCA2_bicubic', 'UG'     , ''
   sn_hpgj     = 'NOT USED'                   ,   24.        , 'vhpg'    ,   .false.   , .false., 'monthly' , 'weights_ERAI3D_F128_2_ORCA2_bicubic', 'VG'     , ''
/
!-----------------------------------------------------------------------
&namtra_qsr    !   penetrative solar radiation                          (ln_traqsr =T)
!-----------------------------------------------------------------------
   !                       !  type of penetration                        (default: NO selection)
   ln_qsr_rgb  = .true.,      !  RGB light penetration (Red-Green-Blue)

   cn_dir      = './INPUTS/'      !  root directory for the chlorophyl data location
   !___________!_________________________!___________________!___________!_____________!________!___________!__________________!__________!_______________!
   !           !  file name              ! frequency (hours) ! variable  ! time interp.!  clim  ! 'yearly'/ ! weights filename ! rotation ! land/sea mask !
   !           !                         !  (if <0  months)  !   name    !   (logical) !  (T/F) ! 'monthly' !                  ! pairing  !    filename   !
   sn_chl      ='chlorophyll'            ,        -1.        , 'CHLA'    ,   .true.    , .true. , 'yearly'  , ''               , ''       , ''
/
!-----------------------------------------------------------------------
&namsbc_ssr    !   surface boundary condition : sea surface restoring   (ln_ssr =T)
!-----------------------------------------------------------------------
   nn_sstr     =     0     !  add a retroaction term to the surface heat flux (=1) or not (=0)
      rn_dqdt     = -40.      !  magnitude of the retroaction on temperature   [W/m2/K]
   nn_sssr     =     2     !  add a damping term to the surface freshwater flux (=2)
      !                    !  or to SSS only (=1) or no damping term (=0)
      rn_deds     =  -33.333  !  magnitude of the damping on salinity   [mm/day]
      ln_sssr_bnd =  .true.,   !  flag to bound erp term (associated with nn_sssr=2)
      rn_sssr_bnd =   4.e0    !  ABS(Max/Min) value of the damping erp term [mm/day]
      nn_sssr_ice =   1       ! control of sea surface restoring under sea-ice
                              ! 0 = no restoration under ice : * (1-icefrac)
                              ! 1 = restoration everywhere 
                              ! >1 = enhanced restoration under ice : 1+(nn_icedmp-1)*icefrac

   cn_dir      = './INPUTS/'      !  root directory for the SST/SSS data location
   !___________!_________________________!___________________!___________!_____________!________!___________!__________________!__________!_______________!
   !           !  file name              ! frequency (hours) ! variable  ! time interp.!  clim  ! 'yearly'/ ! weights filename ! rotation ! land/sea mask !
   !           !                         !  (if <0  months)  !   name    !   (logical) !  (T/F) ! 'monthly' !                  ! pairing  !    filename   !
   sn_sst      = 'sst_data'              ,        24.        ,  'sst'    ,    .false.  , .false., 'yearly'  ,    ''            ,    ''    ,     ''
   sn_sss      = 'sss_1m_teos10.nc',-1,'salinity',.true.,.true.,'yearly','','','',
/


/
!-----------------------------------------------------------------------
&namsbc_rnf    !   runoffs                                              (ln_rnf =T)
!-----------------------------------------------------------------------
   ln_rnf_mouth = .true.,   !  specific treatment at rivers mouths
      rn_hrnf     =  10.e0     !  depth over which enhanced vertical mixing is used    (ln_rnf_mouth=T)
      rn_avt_rnf  =   2.e-3    !  value of the additional vertical mixing coef. [m2/s] (ln_rnf_mouth=T)
   rn_rfact     =   1.e0    !  multiplicative factor for runoff
   ln_rnf_depth = .false.,   !  read in depth information for runoff
   ln_rnf_tem   = .false.,   !  read in temperature information for runoff
   ln_rnf_sal   = .false.,   !  read in salinity information for runoff
   ln_rnf_icb   = .false.,   !  read iceberg flux
   ln_rnf_depth_ini = .false.,  ! compute depth at initialisation from runoff file
      rn_rnf_max  = 5.735e-4   !  max value of the runoff climatologie over global domain ( ln_rnf_depth_ini = .true.,)
      rn_dep_max  = 150.       !  depth over which runoffs is spread ( ln_rnf_depth_ini = .true.,)
      nn_rnf_depth_file = 0    !  create (=1) a runoff depth file or not (=0)

   cn_dir       = './INPUTS/'      !  root directory for the runoff data location
   !___________!_________________________!___________________!___________!_____________!________!___________!__________________!__________!_______________!
   !           !  file name              ! frequency (hours) ! variable  ! time interp.!  clim  ! 'yearly'/ ! weights filename ! rotation ! land/sea mask !
   !           !                         !  (if <0  months)  !   name    !   (logical) !  (T/F) ! 'monthly' !                  ! pairing  !    filename   !
   sn_rnf      = XXX_RNF_XXX                                                                               , ''               , ''       , ''
   sn_cnf      = 'runoff_1m_nomask.nc'   ,       -12.        , 'socoefr',   .false.   , .true. , 'yearly'  , ''               , ''       , ''
   sn_s_rnf    = 'runoffs'               ,        24.        , 'rosaline',   .true.    , .true. , 'yearly'  , ''               , ''       , ''
   sn_t_rnf    = 'runoffs'               ,        24.        , 'rotemper',   .true.    , .true. , 'yearly'  , ''               , ''       , ''
   sn_i_rnf    = 'NOT USED'              ,        24.        , 'xxxxxxxx',   .true.    , .true. , 'yearly'  , ''               , ''       , ''
   sn_dep_rnf  = 'runoffs'               ,       -12.        , 'rodepth' ,   .false.   , .true. , 'yearly'  , ''               , ''       , ''
/
!-----------------------------------------------------------------------
&namisf       !  Top boundary layer (ISF)                               (default: OFF)
!-----------------------------------------------------------------------
    ln_isf = .true.,
    ln_isfpar_mlt = .true.,
    sn_isfpar_zmax = 'INPUTS/JRA_RIVERS/runoff_1m_nomask.nc', 0, 'sozisfmax', .false.,
                     .true., 'yearly', '', '', '',
    sn_isfpar_zmin = 'INPUTS/JRA_RIVERS/runoff_1m_nomask.nc', 0, 'sozisfmin', .false.,
                     .true., 'yearly', '', '', '',
    sn_isfpar_fwf = 'INPUTS/JRA_RIVERS/runoff_1m_nomask.nc', -1, 'sofwfisf', .false.,
                    .true., 'yearly', '', '', '',
/
!-----------------------------------------------------------------------
&namsbc_fwb    !   freshwater-budget adjustment                         (nn_fwb > 0)
!-----------------------------------------------------------------------
   rn_fwb0     = 0.0          ! Initial freshwater adjustment flux [kg/m2/s] (nn_fwb = 2)
/

!!======================================================================
!!               ***  Lateral boundary condition  ***                 !!
!!                                                                    !!
!!   namlbc        lateral momentum boundary condition                  (default: NO selection)
!!   namagrif      agrif nested grid   (read by child model only)       ("key_agrif")
!!   nam_tide      Tidal forcing                                        (default: OFF)
!!   nambdy        Unstructured open boundaries                         (default: OFF)
!!   nambdy_dta    Unstructured open boundaries - external data         (see  nambdy)
!!   nambdy_tide   tidal forcing at open boundaries                     (default: OFF)
!!======================================================================
!
!-----------------------------------------------------------------------
&namlbc        !   lateral momentum boundary condition                  (default: NO selection)
!-----------------------------------------------------------------------
   !                       !  free slip  !   partial slip  !   no slip   ! strong slip
   rn_shlat    =  0.   !  shlat = 0  !  0 < shlat < 2  !  shlat = 2  !  2 < shlat
   ln_shlat2d=XXX_SHA_XXX,
   ln_vorlat=.false.,
   cn_shlat2d_file='./INPUTS/shlat2d.nc',
   cn_shlat2d_var='shlat2d',
/
!-----------------------------------------------------------------------
&nam_tide      !   tide parameters                                      (default: OFF)
!-----------------------------------------------------------------------
   ln_tide     = XXX_TID_XXX,      ! Activate tides
      nn_tide_var   = 1          !  Variant of tidal parameter set and tide-potential computation
      !                          !     (1: default; 0: compatibility with previous versions)
      ln_tide_dia   = .true.,    !  Enable tidal diagnostic output
      ln_tide_pot   = .true.,               !  use tidal potential forcing
         rn_tide_gamma = 0.7                   ! Tidal tilt factor
         ln_scal_load  = .true.,               ! Use scalar approximation for
            rn_scal_load = 0.12               !     load potential
         ln_read_load  = .false.,               ! Or read load potential from file
            cn_tide_load = 'tide_LOAD_grid_T.nc'  ! filename for load potential
            !
      ln_tide_ramp  = XXX_RMP_XXX,               !  Use linear ramp for tides at startup
         rn_tide_ramp_dt = 28.               !  ramp duration in days
        ln_int_wave_drag = XXX_TDG_XXX,
        cn_int_wave_drag = 'INPUTS/tdiss_R025_fac2.nc',
     ln_calc_tdiss = XXX_CTD_XXX ,   ! calculate tdiss rather than reading in
        cn_h_rough = 'INPUTS/h_RMS_topog_anom.nc', ! roughness file
        rn_kappa_tdiss = 0.00075398 ! x12 value  0.00006283,  ! wave number Jayne and Laurence 2004 value !282.74333! increasedwith x1500^2 x2
        tdiss_mindepth = 500.0 ! minimum depth to apply tdiss parameterisation 

      sn_tide_cnames(1) = 'Sa',
      sn_tide_cnames(2) = 'Ssa',
      sn_tide_cnames(3) = 'Mm',
      sn_tide_cnames(4) = 'Msf',
      sn_tide_cnames(5) = 'Mf',
      sn_tide_cnames(6) = 'K1',
      sn_tide_cnames(7) = 'Q1',
      sn_tide_cnames(8) = 'O1',
      sn_tide_cnames(9) = 'P1',
      sn_tide_cnames(10) = 'S1',
      sn_tide_cnames(11) = 'J1',
      sn_tide_cnames(12) = 'M2',
      sn_tide_cnames(13) = 'S2',
      sn_tide_cnames(14) = '2N2',
      sn_tide_cnames(15) = 'mu2',
      sn_tide_cnames(16) = 'N2',
      sn_tide_cnames(17) = 'nu2',
      sn_tide_cnames(18) = 'L2',
      sn_tide_cnames(19) = 'T2',
      sn_tide_cnames(20) = 'K2',
      sn_tide_cnames(21) = 'MKS2',
      sn_tide_cnames(22) = 'lam2',
      sn_tide_cnames(23) = 'R2',
/

!!======================================================================
!!                ***  Top/Bottom boundary condition  ***             !!
!!                                                                    !!
!!   namdrg        top/bottom drag coefficient                          (default: NO selection)
!!   namdrg_top    top    friction                                      (ln_drg_OFF=F & ln_isfcav=T)
!!   namdrg_bot    bottom friction                                      (ln_drg_OFF=F)
!!   nambbc        bottom temperature boundary condition                (default: OFF)
!!   nambbl        bottom boundary layer scheme                         (default: OFF)
!!======================================================================
!
!-----------------------------------------------------------------------
&namdrg        !   top/bottom drag coefficient                          (default: NO selection)
!-----------------------------------------------------------------------
   ln_drg_OFF  = .false.,   !  free-slip       : Cd = 0                  (F => fill namdrg_bot
   ln_non_lin  = XXX_NLN_XXX,   !  non-linear  drag: Cd = Cd0 |U|
   ln_loglayer = XXX_LOG_XXX,   !  logarithmic drag: Cd = vkarmn/log(z/z0) |U|
   !
   ln_drgimp   = .true.,    !  implicit top/bottom friction flag
      ln_drgice_imp = .true., ! implicit ice-ocean drag
/
!-----------------------------------------------------------------------
&namdrg_top    !   TOP friction                                         (ln_drg_OFF =F & ln_isfcav=T)
!-----------------------------------------------------------------------
   rn_Cd0      =  1.e-3    !  drag coefficient [-]
   rn_Uc0      =  0.4      !  ref. velocity [m/s] (linear drag=Cd0*Uc0)
   rn_Cdmax    =  0.1      !  drag value maximum [-] (logarithmic drag)
   rn_ke0      =  2.5e-3   !  background kinetic energy  [m2/s2] (non-linear cases)
   rn_z0       =  3.0e-3   !  roughness [m] (ln_loglayer=T)
   ln_boost    = .false.,   !  =T regional boost of Cd0 ; =F constant
      rn_boost =  50.         !  local boost factor  [-]
/
!-----------------------------------------------------------------------
&namdrg_bot    !   BOTTOM friction                                      (ln_drg_OFF =F)
!-----------------------------------------------------------------------
   rn_Cd0      =  XXX_CD0_XXX    !  drag coefficient [-]
   rn_Uc0      =  0.4      !  ref. velocity [m/s] (linear drag=Cd0*Uc0)
   rn_Cdmax    =  0.1      !  drag value maximum [-] (logarithmic drag)
   rn_ke0      =  2.5e-3   !  background kinetic energy  [m2/s2] (non-linear cases)
   rn_z0       =  3.e-3    !  roughness [m] (ln_loglayer=T)
   ln_boost    = XXX_BOO_XXX,   !  =T regional boost of Cd0 ; =F constant
      rn_boost =  50.         !  local boost factor  [-]
/
!-----------------------------------------------------------------------
&nambbc        !   bottom temperature boundary condition                (default: OFF)
!-----------------------------------------------------------------------
   ln_trabbc   = .true.,   !  Apply a geothermal heating at the ocean bottom
      nn_geoflx     = 2       !  geothermal heat flux: = 1 constant flux
      !                       !                        = 2 read variable flux [mW/m2]
      rn_geoflx_cst = 86.4e-3 !  Constant value of geothermal heat flux       [mW/m2]

   cn_dir      = './INPUTS/'      !  root directory for the geothermal data location
   !___________!_________________________!___________________!___________!_____________!________!___________!__________________!__________!_______________!
   !           !  file name              ! frequency (hours) ! variable  ! time interp.!  clim  ! 'yearly'/ ! weights filename ! rotation ! land/sea mask !
   !           !                         !  (if <0  months)  !   name    !   (logical) !  (T/F) ! 'monthly' !                  ! pairing  !    filename   !
   sn_qgh      ='geothermal_heating_orca025ext_extrap40.nc'  ,       -12.        , 'heatflow',   .false.   , .true. , 'yearly'  ,   ''             ,   ''     ,   ''
/
!-----------------------------------------------------------------------
&nambbl        !   bottom boundary layer scheme                         (default: OFF)
!-----------------------------------------------------------------------
   ln_trabbl   = XXX_BBL_XXX,   !  Bottom Boundary Layer parameterisation flag
      nn_bbl_ldf  =  1        !  diffusive bbl (=1)   or not (=0)
      nn_bbl_adv  =  1        !  advective bbl (=1/2) or not (=0)
      rn_ahtbbl   =  1000.    !  lateral mixing coefficient in the bbl  [m2/s]
      rn_gambbl   =  10.      !  advective bbl coefficient                 [s]
/

!!======================================================================
!!                        Tracer (T-S) namelists                      !!
!!                                                                    !!
!!   nameos        equation of state                                    (default: NO selection)
!!   namtra_adv    advection scheme                                     (default: NO selection)
!!   namtra_ldf    lateral diffusion scheme                             (default: NO selection)
!!   namtra_mle    mixed layer eddy param. (Fox-Kemper param.)          (default: OFF)
!!   namtra_eiv    eddy induced velocity param.                         (default: OFF)
!!   namtra_dmp    T & S newtonian damping                              (default: OFF)
!!======================================================================
!
!-----------------------------------------------------------------------
&nameos        !   ocean Equation Of Seawater                           (default: NO selection)
!-----------------------------------------------------------------------
   ln_teos10   = .true.,         !  = Use TEOS-10
/
!-----------------------------------------------------------------------
&namtra_adv    !   advection scheme for tracer                          (default: NO selection)
!-----------------------------------------------------------------------
   ln_traadv_fct = .true., !  FCT scheme
      nn_fct_h   =  4            !  =2/4, horizontal 2nd / 4th order
      nn_fct_v   =  4            !  =2/4, vertical   2nd / COMPACT 4th order
/
!-----------------------------------------------------------------------
&namtra_ldf    !   lateral diffusion scheme for tracers                 (default: NO selection)
!-----------------------------------------------------------------------
   !                       !  Operator type:
   ln_traldf_OFF   = .false.,   !  No explicit diffusion
   ln_traldf_lap   = .true.,   !    laplacian operator
   ln_traldf_blp   = .false.,   !  bilaplacian operator
   !
   !                       !  Direction of action:
   ln_traldf_lev   = .false.,   !  iso-level
   ln_traldf_hor   = XXX_HOR_XXX,   !  horizontal  (geopotential)
   ln_traldf_iso   = XXX_ISO_XXX,   !  iso-neutral (standard operator)
   ln_traldf_triad = .false.,   !  iso-neutral (triad    operator)
   !
   !		       	         !  iso-neutral options:
   ln_traldf_msc   = .false.,   !  Method of Stabilizing Correction      (both operators)
   rn_slpmax       =  0.01     !  slope limit                           (both operators)
   ln_triad_iso    = .false.,   !  pure horizontal mixing in ML              (triad only)
   rn_sw_triad     = 1         !  =1 switching triad ; =0 all 4 triads used (triad only)
   ln_botmix_triad = .false.,   !  lateral mixing on bottom                  (triad only)
   !
   !                       !  Coefficients:
   nn_aht_ijk_t    = 20         !  space/time variation of eddy coefficient:
      !                             !   =-20 (=-30)    read in eddy_diffusivity_2D.nc (..._3D.nc) file
      !                             !   =  0           constant
      !                             !   = 10 F(k)      =ldf_c1d
      !                             !   = 20 F(i,j)    =ldf_c2d
      !                             !   = 21 F(i,j,t)  =Treguier et al. JPO 1997 formulation
      !                             !   = 30 F(i,j,k)  =ldf_c2d * ldf_c1d
      !                             !   = 31 F(i,j,k,t)=F(local velocity and grid-spacing)
      !                        !  time invariant coefficients:  aht0 = 1/2  Ud*Ld   (lap case)
      !                             !                           or   = 1/12 Ud*Ld^3 (blp case)
      rn_Ud        = 0.011  !0.027 in NPD  !  lateral diffusive velocity [m/s] (nn_aht_ijk_t= 0, 10, 20, 30)
      rn_Ld        = 200.e+3        !  lateral diffusive length   [m]   (nn_aht_ijk_t= 0, 10)
/

!!======================================================================
!!                      ***  Dynamics namelists  ***                  !!
!!                                                                    !!
!!   nam_vvl       vertical coordinate options                          (default: z-star)
!!   namdyn_adv    formulation of the momentum advection                (default: NO selection)
!!   namdyn_vor    advection scheme                                     (default: NO selection)
!!   namdyn_hpg    hydrostatic pressure gradient                        (default: NO selection)
!!   namdyn_spg    surface pressure gradient                            (default: NO selection)
!!   namdyn_ldf    lateral diffusion scheme                             (default: NO selection)
!!   namdta_dyn    offline TOP: dynamics read in files                  (OFF_SRC only)
!!======================================================================
!
!-----------------------------------------------------------------------
&nam_vvl       !   vertical coordinate options                          (default: z-star)
!-----------------------------------------------------------------------
   ln_vvl_zstar  = .true.,           !  z-star vertical coordinate
   rn_ahe3       =  0.0             !  thickness diffusion coefficient
   rn_rst_e3t    = 30.0             !  ztilde to zstar restoration timescale [days]
   rn_lf_cutoff  =  5.0             !  cutoff frequency for low-pass filter  [days]
   rn_zdef_max   =  0.9             !  maximum fractional e3t deformation
   ln_vvl_dbg    = .false.,          !  debug prints    (T/F)
/

!-----------------------------------------------------------------------
&namdyn_adv    !   formulation of the momentum advection                (default: NO selection)
!-----------------------------------------------------------------------
   ln_dynadv_OFF = .false., !  linear dynamics (no momentum advection)
   ln_dynadv_vec = .true., !  vector form - 2nd centered scheme
     nn_dynkeg     = 1        ! grad(KE) scheme: =0   C2  ;  =1   Hollingsworth correction
   ln_dynadv_cen2 = .false., !  flux form - 2nd order centered scheme
   ln_dynadv_ubs = .false., !  flux form - 3rd order UBS      scheme
/
!-----------------------------------------------------------------------
&namdyn_vor    !   Vorticity / Coriolis scheme                          (default: NO selection)
!-----------------------------------------------------------------------
   ln_dynvor_een = .true., !  energy & enstrophy scheme
/
!-----------------------------------------------------------------------
&namdyn_hpg    !   Hydrostatic pressure gradient option                 (default: NO selection)
!-----------------------------------------------------------------------
   ln_hpg_zco  = .false.,   !  z-coordinate - full steps
   ln_hpg_zps  = .false.,   !  z-coordinate - partial steps (interpolation)
   ln_hpg_sco  = XXX_SCO_XXX,   !  s-coordinate (standard jacobian formulation)
   ln_hpg_isf  = .false.,   !  s-coordinate (sco ) adapted to isf
   ln_hpg_djc  = XXX_DJC_XXX,   !  s-coordinate (Density Jacobian with Cubic polynomial)
      ln_hpg_djc_vnh = .true.,  !  hor.  bc type for djc scheme (T=von Neumann, F=linear extrapolation)
      ln_hpg_djc_vnv = .true.,  !  vert. bc type for djc scheme (T=von Neumann, F=linear extrapolation)
   ln_hpg_prj  = XXX_PRJ_XXX,   !  s-coordinate (Pressure Jacobian scheme)
/
!-----------------------------------------------------------------------
&namdyn_spg    !   surface pressure gradient                            (default: NO selection)
!-----------------------------------------------------------------------
   ln_dynspg_ts   = .true.,   ! split-explicit free surface
      ln_bt_fw      = .true.,     ! Forward integration of barotropic Eqs.
      ln_bt_av      = .true.,     ! Time filtering of barotropic variables
         nn_bt_flt     = 1          ! Time filter choice  = 0 None
         !                          !                     = 1 Boxcar over   nn_e sub-steps
         !                          !                     = 2 Boxcar over 2*nn_e  "    "
      ln_bt_auto    = XXX_BTA_XXX,     ! Number of sub-step defined from:
         rn_bt_cmax   =  XXX_BTC_XXX ! =T : the Maximum Courant Number allowed
         nn_e         = 30          ! =F : the number of sub-step in rn_Dt seconds
      rn_bt_alpha   = 0.         ! Temporal diffusion parameter (if ln_bt_av=F)
/
!-----------------------------------------------------------------------
&namdyn_ldf    !   lateral diffusion on momentum                        (default: NO selection)
!-----------------------------------------------------------------------
   !                       !  Type of the operator :
   ln_dynldf_OFF = .false.,     !  No operator (i.e. no explicit diffusion)
   nn_dynldf_typ = 0           !  =0 div-rot (default)   ;   =1 symmetric
   ln_dynldf_lap = .false.,     !    laplacian operator
   ln_dynldf_blp = .true.,     !  bilaplacian operator
   !                       !  Direction of action  :
   ln_dynldf_lev = .true.,     !  iso-level
   ln_dynldf_hor = .false.,     !  horizontal  (geopotential)
   ln_dynldf_iso = .false.,     !  iso-neutral (lap only)
   !                       !  Coefficient
   nn_ahm_ijk_t  = 20           !  space/time variation of eddy coefficient :
      !                             !  =-30  read in eddy_viscosity_3D.nc file
      !                             !  =-20  read in eddy_viscosity_2D.nc file
      !                             !  =  0  constant
      !                             !  = 10  F(k)=c1d
      !                             !  = 20  F(i,j)=F(grid spacing)=c2d
      !                             !  = 30  F(i,j,k)=c2d*c1d
      !                             !  = 31  F(i,j,k)=F(grid spacing and local velocity)
      !                             !  = 32  F(i,j,k)=F(local gridscale and deformation rate)
      !                        !  time invariant coefficients :  ahm = 1/2  Uv*Lv   (lap case)
      !                             !                            or  = 1/12 Uv*Lv^3 (blp case)
      rn_Uv      =  0.0838 ! NPD has 0.1895              !  lateral viscous velocity [m/s] (nn_ahm_ijk_t= 0, 10, 20, 30)
      rn_Lv      = 10.e+3           !  lateral viscous length   [m]   (nn_ahm_ijk_t= 0, 10)
      !                       !  Smagorinsky settings  (nn_ahm_ijk_t= 32) :
      rn_csmc       = 3.5         !  Smagorinsky constant of proportionality
      rn_minfac     = 1.0         !  multiplier of theorectical lower limit
      rn_maxfac     = 1.0         !  multiplier of theorectical upper limit
      !                       !  iso-neutral laplacian operator (ln_dynldf_iso=T) :
      rn_ahm_b      = 0.0         !  background eddy viscosity  [m2/s]
/

!!======================================================================
!!                     vertical physics namelists                     !!
!!                                                                    !!
!!    namzdf        vertical physics manager                            (default: NO selection)
!!    namzdf_ric    richardson number vertical mixing                   (ln_zdfric=T)
!!    namzdf_tke    TKE vertical mixing                                 (ln_zdftke=T)
!!    namzdf_gls    GLS vertical mixing                                 (ln_zdfgls=T)
!!    namzdf_osm    OSM vertical diffusion                              (ln_zdfosm=T)
!!    namzdf_iwm    tidal mixing parameterization                       (ln_zdfiwm=T)
!!======================================================================
!
!-----------------------------------------------------------------------
&namzdf        !   vertical physics manager                             (default: NO selection)
!-----------------------------------------------------------------------
   !                       ! adaptive-implicit vertical advection
   ln_zad_Aimp = .true.,      !  Courant number dependent scheme (Shchepetkin 2015)
   !
   !                       ! type of vertical closure (required)
   ln_zdfcst   = .false.,      !  constant mixing
   ln_zdfric   = .false.,      !  local Richardson dependent formulation (T =>   fill namzdf_ric)
   ln_zdftke   = XXX_TKE_XXX,      !  Turbulent Kinetic Energy closure       (T =>   fill namzdf_tke)
   ln_zdfgls   = XXX_GLS_XXX,      !  Generic Length Scale closure           (T =>   fill namzdf_gls)
   ln_zdfosm   = .false.,      !  OSMOSIS BL closure                     (T =>   fill namzdf_osm)
   !
   !                       ! convection
   ln_zdfevd   = XXX_EVD_XXX,      !  enhanced vertical diffusion
      nn_evdm     =    0         ! apply on tracer (=0) or on tracer and momentum (=1)
      rn_evd      =  10.        ! mixing coefficient [m2/s]
   ln_zdfnpc   = .false.,      !  Non-Penetrative Convective algorithm
      nn_npc      =    1         ! frequency of application of npc
      nn_npcp     =  365         ! npc control print frequency
   ln_zdfmfc   = .false.,      !  Mass Flux Convection
   !
   ln_zdfddm   = .true.,   ! double diffusive mixing
      rn_avts  =    1.e-4     !  maximum avs (vertical mixing on salinity)
      rn_hsbfr =    1.6       !  heat/salt buoyancy flux ratio
   !
   !                       ! gravity wave-driven vertical mixing
   ln_zdfiwm   = .true.,      ! internal wave-induced mixing            (T =>   fill namzdf_iwm)
   ln_zdfswm   = .false.,      ! surface  wave-induced mixing            (T => ln_wave=ln_sdw=T )
   !
   !                       ! coefficients
   rn_avm0     =   1.2e-4     !  vertical eddy viscosity   [m2/s]       (background Kz if ln_zdfcst=F)
   rn_avt0     =   1.2e-5     !  vertical eddy diffusivity [m2/s]       (background Kz if ln_zdfcst=F)
   nn_avb      =    0         !  profile for background avt & avm (=1) or not (=0)
   nn_havtb    =    0         !  horizontal shape for avtb (=1) or not (=0)
/
!-----------------------------------------------------------------------
&namzdf_tke    !   turbulent eddy kinetic dependent vertical diffusion  (ln_zdftke =T)
!-----------------------------------------------------------------------
   rn_ediff    =   0.1     !  coef. for vertical eddy coef. (avt=rn_ediff*mxl*sqrt(e) )
   rn_ediss    =   0.7     !  coef. of the Kolmogoroff dissipation
   rn_ebb      =  67.83    !  coef. of the surface input of tke (=67.83 suggested when ln_mxl0=T)
   rn_emin     =   1.e-6   !  minimum value of tke [m2/s2]
   rn_emin0    =   1.e-4   !  surface minimum value of tke [m2/s2]
   rn_bshear   =   1.e-20  ! background shear (>0) currently a numerical threshold (do not change it)
   nn_pdl      =   1       !  Prandtl number function of richarson number (=1, avt=pdl(Ri)*avm) or not (=0, avt=avm)
   nn_mxl      =   3       !  mixing length: = 0 bounded by the distance to surface and bottom
   !                       !                 = 1 bounded by the local vertical scale factor
   !                       !                 = 2 first vertical derivative of mixing length bounded by 1
   !                       !                 = 3 as =2 with distinct dissipative an mixing length scale
   ln_mxl0     = .true.,    !  surface mixing length scale = F(wind stress) (T) or not (F)
      nn_mxlice    = 2        ! type of scaling under sea-ice
      !                       !    = 0 no scaling under sea-ice
      !                       !    = 1 scaling with constant sea-ice thickness
      !                       !    = 2 scaling with mean sea-ice thickness ( only with SI3 sea-ice model )
      !                       !    = 3 scaling with maximum sea-ice thickness
      rn_mxlice   = 10.       ! max constant ice thickness value when scaling under sea-ice ( nn_mxlice=1)
   rn_mxl0     =   0.04    !  surface  buoyancy lenght scale minimum value
   ln_mxhsw    = .false.,   !  surface mixing length scale = F(wave height)
   ln_lc       = .true.,    !  Langmuir cell parameterisation (Axell 2002)
      rn_lc       =   0.15    !  coef. associated to Langmuir cells
   nn_etau     =   1       !  penetration of tke below the mixed layer (ML) due to NIWs
   !                          !        = 0 none ; = 1 add a tke source below the ML
   !                          !        = 2 add a tke source just at the base of the ML
   !                          !        = 3 as = 1 applied on HF part of the stress           (ln_cpl=T)
      rn_efr      =   0.05    !  fraction of surface tke value which penetrates below the ML (nn_etau=1 or 2)
      nn_htau     =   1       !  type of exponential decrease of tke penetration below the ML
      !                       !        = 0  constant 10 m length scale
      !                       !        = 1  0.5m at the equator to 30m poleward of 40 degrees
      rn_htau_scaling = 1.0   !  scaling factor to apply to depth of TKE penetration
   nn_eice     =   1       !  attenutaion of langmuir & surface wave breaking under ice
   !                       !           = 0 no impact of ice cover on langmuir & surface wave breaking
   !                       !           = 1 weigthed by 1-TANH(10*fr_i)
   !                       !           = 2 weighted by 1-fr_i
   !                       !           = 3 weighted by 1-MIN(1,4*fr_i)   
   nn_bc_surf   =     1    !  surface condition (0/1=Dir/Neum) ! Only applicable for wave coupling (ln_cplwave=1)
   nn_bc_bot    =     1    !  bottom condition (0/1=Dir/Neum) ! Only applicable for wave coupling (ln_cplwave=1)
/
!-----------------------------------------------------------------------
&namzdf_gls    !   GLS vertical diffusion                               (ln_zdfgls =T)
!-----------------------------------------------------------------------
   rn_emin       = 1.e-7   !  minimum value of e   [m2/s2]
   rn_epsmin     = 1.e-12  !  minimum value of eps [m2/s3]
   ln_length_lim = .true.,  !  limit on the dissipation rate under stable stratification (Galperin et al., 1988)
   rn_clim_galp  = 0.267   !  galperin limit
   ln_sigpsi     = .true.,  !  Activate or not Burchard 2001 mods on psi schmidt number in the wb case
   rn_crban      = 100.    !  Craig and Banner 1994 constant for wb tke flux
   rn_charn      = 70000.  !  Charnock constant for wb induced roughness length
   rn_hsro       =  0.02   !  Minimum surface roughness
   rn_hsri       =  0.02 ! default is 0.03   !  Ice-ocean roughness
   rn_frac_hs    =   1.3   !  Fraction of wave height as roughness (if nn_z0_met>1)
   nn_z0_met     =     2   !  Method for surface roughness computation (0/1/2/3)
   !                       !     = 3 requires ln_wave=T
   nn_z0_ice     =   XXX_Z0I_XXX     !  attenutaion of surface wave breaking under ice
   !                       !           = 0 no impact of ice cover
   !                       !           = 1 roughness uses rn_hsri and is weigthed by 1-TANH(10*fr_i)
   !                       !           = 2 roughness uses rn_hsri and is weighted by 1-fr_i
   !                       !           = 3 roughness uses rn_hsri and is weighted by 1-MIN(1,4*fr_i)
   nn_mxlice     =     XXX_IMX_XXX   !  mixing under sea ice
                           !     = 0 No scaling under sea-ice
                           !     = 1 scaling with constant Ice-ocean roughness (rn_hsri)
                           !     = 2 scaling with mean sea-ice thickness
                           !     = 3 scaling with max sea-ice thickness
   nn_bc_surf    =     1   !  surface condition (0/1=Dir/Neum)
   nn_bc_bot     =     1   !  bottom condition (0/1=Dir/Neum)
   nn_stab_func  =     2   !  stability function (0=Galp, 1= KC94, 2=CanutoA, 3=CanutoB)
   nn_clos       =     1   !  predefined closure type (0=MY82, 1=k-eps, 2=k-w, 3=Gen)
/
!-----------------------------------------------------------------------
&namzdf_mfc     !   Mass Flux Convection
!-----------------------------------------------------------------------
   ln_edmfuv  = .false.,        ! Activate on velocity fields (Not available yet)
   rn_cemf    =  1.            ! entrain/detrain coef. (<0 => cte; >0 % depending on dW/dz
   rn_cwmf    = -0.            ! entrain/detrain coef. (<0 => cte; >0 % depending on dW/dz
   rn_cent    = 2.e-5          ! entrain of convective area
   rn_cdet    = 3.e-5          ! detrain of convective area 
   rn_cap     = 0.9            ! Coef. for CAP estimation
   App_max    = 0.1            ! Maximum convection area (% of the cell)
/
!-----------------------------------------------------------------------
&namzdf_iwm    !    internal wave-driven mixing parameterization        (ln_zdfiwm =T)
!-----------------------------------------------------------------------
   ln_mevar    = .false.,    !  variable (T) or constant (F) mixing efficiency
   ln_tsdiff   = .true.,    !  account for differential T/S mixing (T) or not (F)

   cn_dir      = './'      !  root directory for the iwm data location                                                                           
   !___________!_________________________!___________________!___________!_____________!________!___________!__________________!__________!_______________!
   !           !  file name              ! frequency (hours) ! variable  ! time interp.!  clim  ! 'yearly'/ ! weights filename ! rotation ! land/sea mask !
   !           !                         !  (if <0  months)  !   name    !   (logical) !  (T/F) ! 'monthly' !                  ! pairing  !    filename   !
   sn_mpb      = 'NOT USED'              , -12.              , 'power_bot' , .false.  , .true. , 'yearly' , '' , ''  , ''
   sn_mpc      = 'NOT USED'              , -12.              , 'power_cri' , .false.  , .true. , 'yearly' , '' , ''  , ''
   sn_mpn      = 'NOT USED'              , -12.              , 'power_nsq' , .false.  , .true. , 'yearly' , '' , ''  , ''
   sn_mps      = 'NOT USED'              , -12.              , 'power_sho' , .false.  , .true. , 'yearly' , '' , ''  , ''
   sn_dsb      = 'NOT USED'              , -12.              , 'scale_bot' , .false.  , .true. , 'yearly' , '' , ''  , ''
   sn_dsc      = 'NOT USED'              , -12.              , 'scale_cri' , .false.  , .true. , 'yearly' , '' , ''  , ''
/
!!======================================================================
!!                  ***  Diagnostics namelists  ***                   !!
!!                                                                    !!
!!   namtrd       dynamics and/or tracer trends                         (default: OFF)
!!   namhsb       Heat and salt budgets                                 (default: OFF)
!!   namdiu       Cool skin and warm layer models                       (default: OFF)
!!   namdiu       Cool skin and warm layer models                       (default: OFF)
!!   namflo       float parameters                                      (default: OFF)
!!   nam_diadct   transports through some sections                      (default: OFF)
!!   nam_dia25h   25h Mean Output                                       (default: OFF)
!!   namnc4       netcdf4 chunking and compression settings             ("key_netcdf4")
!!======================================================================
!
!-----------------------------------------------------------------------
&namtrd        !   trend diagnostics                                    (default: OFF)
!-----------------------------------------------------------------------
   ln_glo_trd  = .false.,   ! (T) global domain averaged diag for T, T^2, KE, and PE
   ln_dyn_trd  = .false.,   ! (T) 3D momentum trend output
   ln_dyn_mxl  = .false.,   ! (T) 2D momentum trends averaged over the mixed layer (not coded yet)
   ln_vor_trd  = .false.,   ! (T) 2D barotropic vorticity trends (not coded yet)
   ln_KE_trd   = .false.,   ! (T) 3D Kinetic   Energy     trends
   ln_PE_trd   = .false.,   ! (T) 3D Potential Energy     trends
   ln_tra_trd  = .false.,   ! (T) 3D tracer trend output
   ln_tra_mxl  = .false.,   ! (T) 2D tracer trends averaged over the mixed layer (not coded yet)
   nn_trd      = 365       !  print frequency (ln_glo_trd=T) (unit=time step)
/
!!gm   nn_ctls     =   0       !  control surface type in mixed-layer trends (0,1 or n<jpk)
!!gm   rn_ucf      =   1.      !  unit conversion factor (=1 -> /seconds ; =86400. -> /day)
!!gm   cn_trdrst_in      = "restart_mld"   ! suffix of ocean restart name (input)
!!gm   cn_trdrst_out     = "restart_mld"   ! suffix of ocean restart name (output)
!!gm   ln_trdmld_restart = .false.,         !  restart for ML diagnostics
!!gm   ln_trdmld_instant = .false.,         !  flag to diagnose trends of instantantaneous or mean ML T/S
!!gm
!-----------------------------------------------------------------------
&namhsb        !  Heat and salt budgets                                 (default: OFF)
!-----------------------------------------------------------------------
   ln_diahsb   = .false.,   !  output the heat and salt budgets (T) or not (F)
/
!-----------------------------------------------------------------------
&nam_dia25h    !  25h Mean Output                                       (default: OFF)
!-----------------------------------------------------------------------
   ln_dia25h   = .false.,   ! Choose 25h mean output or not
/
!-----------------------------------------------------------------------
&namnc4        !   netcdf4 chunking and compression settings            ("key_netcdf4")
!-----------------------------------------------------------------------
   nn_nchunks_i =   4       !  number of chunks in i-dimension
   nn_nchunks_j =   4       !  number of chunks in j-dimension
   nn_nchunks_k =   75      !  number of chunks in k-dimension
   !                       !  setting nn_nchunks_k = jpk will give a chunk size of 1 in the vertical which
   !                       !  is optimal for postprocessing which works exclusively with horizontal slabs
   ln_nc4zip   = .true.,    !  (T) use netcdf4 chunking and compression
   !                       !  (F) ignore chunking information and produce netcdf3-compatible files
/

!!======================================================================
!!                  ***  Miscellaneous namelists  ***                 !!
!!                                                                    !!
!!   nammpp            Massively Parallel Processing
!!   namctl            Control prints                                   (default: OFF)
!!   namsto            Stochastic parametrization of EOS                (default: OFF)
!!======================================================================
!
!-----------------------------------------------------------------------
&nammpp        !   Massively Parallel Processing
!-----------------------------------------------------------------------
   ln_listonly =  .false.,  !  do nothing else than listing the best domain decompositions (with land domains suppression)
   !                       !  if T: the largest number of cores tested is defined by max(mppsize, jpni*jpnj)
   ln_nnogather =  .true.,  !  activate code to avoid mpi_allgather use at the northfold
   jpni        =   XXX_PNI_XXX       !  number of processors following i (set automatically if < 1), see also ln_listonly = T
   jpnj        =   XXX_PNJ_XXX       !  number of processors following j (set automatically if < 1), see also ln_listonly = T
   nn_hls      =   1       !  halo width (applies to both rows and columns)
   nn_comm     =   1       !  comm choice
/
!-----------------------------------------------------------------------
&namctl        !   Control prints                                       (default: OFF)
!-----------------------------------------------------------------------
   sn_cfctl%l_runstat = .TRUE.,    ! switches and which areas produce reports with the proc integer settings.
   sn_cfctl%l_trcstat = .FALSE.,   ! The default settings for the proc integers should ensure
   sn_cfctl%l_oceout  = .FALSE.,   ! that  all areas report.
   sn_cfctl%l_layout  = .FALSE.,   !
   sn_cfctl%l_prtctl  = .FALSE.,   !
   sn_cfctl%l_prttrc  = .FALSE.,   !
   sn_cfctl%l_oasout  = .FALSE.,   !
   sn_cfctl%procmin   = 0         ! Minimum area number for reporting [default:0]
   sn_cfctl%procmax   = 1000000   ! Maximum area number for reporting [default:1000000]
   sn_cfctl%procincr  = 1         ! Increment for optional subsetting of areas [default:1]
   sn_cfctl%ptimincr  = 1         ! Timestep increment for writing time step progress info
   nn_ictls    =    0             !  start i indice of control sum (use to compare mono versus
   nn_ictle    =    0             !  end   i indice of control sum        multi processor runs
   nn_jctls    =    0             !  start j indice of control               over a subdomain)
   nn_jctle    =    0             !  end   j indice of control
   nn_isplt    =    1             !  number of processors in i-direction
   nn_jsplt    =    1             !  number of processors in j-direction
   ln_timing   = .true.,          !  timing by routine write out in timing.output file
   ln_diacfl   = .false.,          !  CFL diagnostics write out in cfl_diagnostics.ascii
/
